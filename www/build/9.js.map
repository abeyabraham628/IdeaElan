{"version":3,"sources":["../../src/pages/recruitment/recruitment.module.ts","../../src/pages/recruitment/recruitment.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { ComponentsModule } from './../../components/components.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { RecruitmentPage } from './recruitment';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RecruitmentPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(RecruitmentPage),\r\n    ComponentsModule\r\n  ],\r\n})\r\nexport class RecruitmentPageModule {}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recruitment/recruitment.module.ts","import { Component, ViewChild, KeyValueDiffers,ChangeDetectorRef } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams ,Slides, Form, Item, AlertController} from 'ionic-angular';\r\nimport {AngularFireDatabase,AngularFireList} from '@angular/fire/database';\r\nimport {FormControl,FormGroup,Validators}from '@angular/forms';\r\nimport { DatePicker } from '@ionic-native/date-picker';\r\nimport {Observable} from 'rxjs/observable'\r\n\r\nimport { InterviewDetailsPage } from '../interview-details/interview-details';\r\n/**\r\n * Generated class for the RecruitmentPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-recruitment',                          \r\n  templateUrl: 'recruitment.html',\r\n})\r\n\r\nexport class RecruitmentPage {\r\n \r\n  recruitment:string;\r\n  scheduleDate: String\r\n  checked:boolean=false\r\n  candidateSelected=true\r\n \r\n  constructor(public alertCtrl:AlertController,private firebase:AngularFireDatabase, private datePicker:DatePicker,public navCtrl: NavController,private ref: ChangeDetectorRef) {\r\n    this.recruitment=\"newApplicant\";\r\n    this.getApplicants();\r\n  }\r\n\r\n\r\napplicantList:AngularFireList<any>;\r\nscheduleList:AngularFireList<any>;\r\n\r\n\r\ngetApplicants(){\r\n  this.applicantList=this.firebase.list('Applicants');\r\n  return this.applicantList.snapshotChanges();\r\n  };\r\n\r\n  //\r\n  getSchedules(){\r\n    this.scheduleList=this.firebase.list('Schedules');\r\n    return this.scheduleList.snapshotChanges();\r\n    };\r\n  \r\n \r\n  applicantDetails=[];// for storing the applciants retrieved from db\r\n  x:boolean=true\r\n  showApplicants(){\r\n    this.newApplicantForm.reset();\r\n   this.getApplicants().subscribe(\r\n     res=>{ \r\n       this.applicantDetails=res.map(item=>{\r\n        if(!item.payload.hasChild('interviewDate'))//  retrieve the applicants who are not scheduled for an interview\r\n         return {\r\n          $key:item.key,\r\n          ...item.payload.val()\r\n         }\r\n        else\r\n         return null\r\n      }).filter(Boolean);//end of map\r\n });//end of subscribe\r\n\r\n\r\n}//end of show applicant function\r\n\r\n//Initialising new applicant form\r\nnewApplicantForm=new FormGroup({\r\n  $key:new FormControl(null),\r\n  fName:new FormControl('',[Validators.required,Validators.minLength(2)]),\r\n  lName:new FormControl('',Validators.required),\r\n  mobile:new FormControl('',[Validators.required,Validators.minLength(10)]),\r\n  email:new FormControl('',[Validators.required,Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]),\r\n  employer:new FormControl('',[Validators.required,Validators.minLength(3)]),\r\n  noticePeriod:new FormControl('',[Validators.required,Validators.minLength(5)]),\r\n  currentctc:new FormControl('',[Validators.required,Validators.minLength(4)]),\r\n  experience:new FormControl('',Validators.required),\r\n  expectedctc: new FormControl('',[Validators.required,Validators.minLength(4)]),\r\n  \r\n})\r\n  \r\n//Function for saving a new applicant to the database\r\n  saveApplicant(applicantDetails:any){\r\n    this.applicantList.push({\r\n        fName:applicantDetails.fName,\r\n        lName:applicantDetails.lName,\r\n        mobile:applicantDetails.mobile,\r\n        email:applicantDetails.email,\r\n        employer:applicantDetails.employer,\r\n        noticePeriod:applicantDetails.noticePeriod,\r\n        currentctc:applicantDetails.currentctc,\r\n        experience:applicantDetails.experience,\r\n        expectedctc:applicantDetails.expectedctc\r\n    }).then(()=>{\r\n      let alert = this.alertCtrl.create({\r\n        title: \"Success\",\r\n        subTitle: \"Applicant added succesfuly \",\r\n        buttons: ['OK']\r\n      });\r\n      \r\n      alert.present();\r\n    });\r\n  }//end of function\r\n\r\n\r\n  onSubmit(){//submit function of save applicant form \r\n    if(this.newApplicantForm.controls.$key.value==null){\r\n      this.saveApplicant(this.newApplicantForm.value);// function for saving the form data to the database\r\n      this.newApplicantForm.reset();// reset applicant form after saving\r\n    }\r\n  }\r\n\r\n  dispdate(){// Funciton for displaying the date picker for selecting interview date\r\n    this.datePicker.show({\r\n      date:new Date(),\r\n      mode:'date',\r\n      androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_LIGHT\r\n    }).then(\r\n      date=>{\r\n        this.scheduleForm.controls.scheduleDate.setValue(date.toLocaleDateString())\r\n       },\r\n      err => console.log('Error occurred while getting date: ', err)\r\n    )\r\n  }//end of function\r\n\r\n\r\n  //Initialising schedule form\r\n  scheduleForm=new FormGroup({\r\n      scheduleDate:new FormControl('',Validators.required),\r\n      scheduleTime:new FormControl('',[Validators.required]),\r\n      contactPerson:new FormControl('',[Validators.required,Validators.minLength(4)]),\r\n      contactPersonNum: new FormControl('',[Validators.required,Validators.minLength(10)]),\r\n      applicants: new FormControl('', Validators.required)\r\n     \r\n  });\r\n\r\n \r\n  //Funtion for saving interview schedules for the respective applicants\r\n  saveSchedule(){\r\n    \r\n    \r\n    let schedule={  \r\n                    interviewTime:this.scheduleForm.controls.scheduleTime.value, \r\n                    contactPerson:this.scheduleForm.controls.contactPerson.value,\r\n                    contactNumber:this.scheduleForm.controls.contactPersonNum.value\r\n                  }\r\n      \r\n                  \r\n      //Schedule details is pushed first to the db and then the key of that particular record is retrieved\r\n      //Once the key is retrieved,that key is add as a reference to the interviewDate field for the selected candidated record. \r\n      \r\n      \r\n\r\n\r\n      this.scheduleList.push({//New schedule is created\r\n        interviewDate:this.scheduleForm.controls.scheduleDate.value,\r\n        interviewDetails:schedule\r\n      }).then((snap) => {// call back function\r\n        // Save the interviewDate for the candidates who are scheduled for interiew\r\n        for(let i=0;i<this.applicantKeys.length;i++)\r\n        this.applicantList.update(this.applicantKeys[i],{\r\n            interviewDate:snap.key\r\n            \r\n        }).then(()=>{\r\n          let alert = this.alertCtrl.create({\r\n            title: \"Success\",\r\n            subTitle: \"Schedule created succesfuly \",\r\n            buttons: ['OK']\r\n          });\r\n          \r\n          alert.present();\r\n          this.scheduleForm.reset()\r\n        this.applicantKeys=[]\r\n          \r\n\r\n        });\r\n        \r\n     });\r\n     \r\n   }//end of save schedule function\r\n \r\n    \r\n  // fucntion for toggling check all or uncheck all applicants\r\n  selectAll(){\r\n    this.checked=!this.checked;\r\n    \r\n  }\r\n\r\n// Function for selecting multiple applincants before assigning a interview schedule\r\napplicantKeys:string[] = [];\r\n  clickSelectBox(itemKey){\r\n    this.scheduleForm.controls['applicants'].setValue('')\r\n    const foundAt = this.applicantKeys.indexOf(itemKey);\r\n      if (foundAt >= 0) \r\n        this.applicantKeys.splice(foundAt, 1);\r\n      else \r\n        this.applicantKeys.push(itemKey);\r\n       \r\n        if(this.applicantKeys.length>0){\r\n          this.candidateSelected=false\r\n        }\r\n        this.scheduleForm.controls['applicants'].setValue(this.applicantKeys)\r\n}\r\n\r\n\r\n  \r\n\r\n// function for retrieving the history of schedules\r\ninterviewDate=[]\r\nviewInterviewDates(){\r\n  this.scheduleForm.reset()\r\n    this.getSchedules().subscribe(\r\n      res=>{\r\n       this.interviewDate= res.map(item=>{\r\n         return{ \r\n            $key:item.key,\r\n            ...item.payload.val()}\r\n        });//end of map\r\n      });//end of subscribe\r\n}//end of function\r\n  \r\n\r\ninterviewDetailsPage(interviewKey,interviewDate,){\r\n  \r\n  this.navCtrl.push('InterviewDetailsPage',{'key':interviewKey,'date':interviewDate});\r\n}\r\n\r\n\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/recruitment/recruitment.ts"],"sourceRoot":""}